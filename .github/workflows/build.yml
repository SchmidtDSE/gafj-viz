name: Build

on: push

permissions:
  actions: read
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install python deps
        run: pip install -r requirements.txt
      - name: Get other deps
        run: bash support/load_deps.sh
      - name: Install optional build tools
        run: pip install mypy pycodestyle pyflakes nose2
      - name: Check flakes
        run: pyflakes *.py
      - name: Check style
        run: pycodestyle *.py
      - name: Check types
        run: mypy *.py
      - name: Run unit tests
        run: nose2
      - name: Run integration tests
        run: bash support/test_integration.sh
      - name: Check prepare lambda zips
        run: bash support/prepare_lambdas.sh
  deployWeb:
    name: Deploy Web
    environment: deploy
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install python deps
        run: pip install -r requirements.txt
      - name: Get other deps
        run: bash support/load_deps.sh
      - name: Prepare deploy
        run: bash support/prepare_deploy.sh
      - name: Upload
        uses: Creepios/sftp-action@v1.0.3
        with:
          host: ${{ secrets.SFTPHOST }}
          port: 22
          username: ${{ secrets.SFTPUSER }}
          password: ${{ secrets.SFTPPASSWORD }}
          localPath: './deploy'
          remotePath: './food-news-viz.org'
  deployLambda:
    name: Deploy Lambda
    environment: deploy
    runs-on: ubuntu-latest
    needs: [test]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare lambda zips
        run: bash support/prepare_lambdas.sh
      - name: Deploy exporter
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: gafj-topic-explorer-export
          zip_file: lambda_deploy/exporter/exporter.zip
      - name: Deploy stat gen
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_access_key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: gafj-topic-explorer-stat
          zip_file: lambda_deploy/statgen/statgen.zip